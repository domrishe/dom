---
import EmptyLayout from '../layouts/Layout.astro';
import '../styles/header.css';
import '../styles/lines.css';

import lp3 from '../media/Projects/lepta/lepta_3.png';
import lp2 from '../media/Projects/lepta/lepta_2.png';
import lp4 from '../media/Projects/lepta/lepta_4.png';
import lp5 from '../media/Projects/lepta/lepta_2.gif';



import mr from '../media/Projects/myrisd/myRISD.gif';

import cb3 from '../media/cb3.png';
import cb2 from '../media/cb2.png';

import w2 from '../media/Projects/weather/w_2.gif';
import w3 from '../media/Projects/weather/w_3.png';
import w4 from '../media/Projects/weather/w_4.gif';
import w5 from '../media/Projects/weather/w_5.gif';


import ig from '../media/Instagram_Glyph_Black.svg';
import fc from '../media/fc_logo.svg';
import x from '../media/x.png';
import li from '../media/li.svg';
import zora from '../media/zorb.png';

---

<EmptyLayout title="Dom">

    <style>
		@font-face {
    font-family: 'Compagnon Medium';
    src: url('/fonts/Comp/Compagnon-Medium.eot') format('eot'),
         url('/fonts/Comp/Compagnon-Medium.woff') format('woff'),
         url('/fonts/Comp/Compagnon-Medium.woff2') format('woff2');
    font-weight: medium;
    font-style: medium;
  }



		svg {
			/* border: solid red; */
			display: block;
			margin: auto;
		
		}
		
		body {
			background-color: #F4F0EC;
		
		}

        .link {
        font-weight: 500;
        font-style: normal;
        }

        .product-title {
            font-family: "IBM Plex Mono";
            font-weight: 600;
            font-size: 4rem;
            width: 80%;
            margin: auto;
            line-height: 1;
            font-style: normal;
            /* text-transform: uppercase; */
        }

        .eb-garamond-unique {
        font-family: "EB Garamond", serif;
        font-optical-sizing: auto;
        font-weight: 600; /* Adjust the weight as needed */
        font-style: normal;
        }


        .headline {
        text-align: center;
        /* font-family: "Georgia", monospace;
        font-weight: 10; */
        font-size: 1rem;
        margin: 33px auto;
        max-width: 100%;
        color: #272520;

        font-family: "EB Garamond", serif;
        font-optical-sizing: auto;
        font-weight: 400; /* Adjust the weight as needed */
        font-style: italic;
        }

        .blurbs {
            max-width: 600px;
            text-align: center;
            margin: 33px auto;
        }

        .head-blurb {
            font-size: 1.5rem;
        }


        .social-media a {
            margin: 0 10px;
            display: inline-block;
        }

        .social-media img {
            width: 20px;
            height: 20px;
        }
		
		.rotator {
			transform-box: fill-box;
			transform-origin: 50% 50%;
		}

        .and {
            font-size: 2rem;
            padding: 100px;
        }

        #intro {
            font-weight: 600;
            margin-top: 0vh;
        }

        .slideshow-container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 500px; /* Set a fixed height for the container */
            margin: 0 auto;
            margin-bottom: 50px;
            margin-top: 50px;
            width: 100%;
            max-width: 600px;
        }

        .slideshow-container2 {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 500px; /* Set a fixed height for the container */
            margin: 0 auto;
            margin-bottom: 50px;
            margin-top: 50px;
            width: 100%;
            max-width: 900px;
        }

        .slideshow-container span {
            margin-top: 7px; /* Adds some space between the image and caption */
            text-align: left; /* Centers the text */
            width: 100%; /* Makes the span take full width of the container */
            font-family: Courier, monospace;
            font-weight: 10;
            font-style: normal;
            font-size: 0.8rem;
        }

        .caption {
            margin-top: 7px; /* Adds some space between the image and caption */
            text-align: left; /* Centers the text */
            width: 100%; /* Makes the span take full width of the container */
            font-family: Courier, monospace;
            font-weight: 10;
            font-style: normal;
            font-size: 0.8rem;
        }

        .pattern-container {
            /* display: flex;
            flex-direction: row;
            justify-content: center; */
            width: 400px;
            /* border: solid red; */
            margin: 150px auto 120px;
        }

        #slideshow {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain; /* Maintain aspect ratio and fit within the container */
        }

        #slideshow2 {
            max-width: 100%;
            max-height: 100%;
            object-fit: fill; /* Maintain aspect ratio and fit within the container */
        }
                
		#clock {
	animation: rotate-clockwise 9s cubic-bezier(0.42, 0, 0.58, 1) infinite;
}

#counter {
	animation: rotate-counter-clockwise 9s cubic-bezier(0.42, 0, 0.58, 1) infinite;
}


@media (max-width: 768px) {
  .slideshow-container, .slideshow-container2 {
    height: min-content;
    /* width: 90%;
    max-width: 100%; */
  }
  
  .caption {
    margin-left: 0px !important;
  }

  #figma {
    width: 100% !important;
    height: auto !important;
  }
}
		
		#bg {
			/* animation: switch 14s infinite step-end; */
		}
		
		@keyframes rotate-clockwise {
    0%, 10% {
        transform: rotate(0deg);
    }
    10%, 20% {
        transform: rotate(90deg);
    }
    20%, 30% {
        transform: rotate(90deg);
    }
    30%, 40% {
        transform: rotate(180deg);
    }
    40%, 50% {
        transform: rotate(180deg);
    }
    50%, 60% {
        transform: rotate(270deg);
    }
    60%, 80% {
        transform: rotate(270deg);
    }
    80%, 100% {
        transform: rotate(360deg);
    }

}

@keyframes rotate-counter-clockwise {
    0%, 10% {
        transform: rotate(0deg);
    }
    10%, 20% {
        transform: rotate(-90deg);
    }
    20%, 30% {
        transform: rotate(-90deg);
    }
    30%, 40% {
        transform: rotate(-180deg);
    }
    40%, 50% {
        transform: rotate(-180deg);
    }
    50%, 60% {
        transform: rotate(-270deg);
    }
    60%, 80% {
        transform: rotate(-270deg);
    }
    80%, 100% {
        transform: rotate(-360deg);
    }
}
		
		@keyframes switch {
			0% {background-color: #B4ABFF;}
			10% {background-color: #D8F4C3;}
			22.5% {background-color: #EE8678;}
			35% {background-color: #D9FEA3;}
			47.5% {background-color: #FEEA73;}
			60% {background-color: #35F2B0;}
			72.5% {background-color: #31B5FF;}
			85% {background-color: #F89CCC;}
			97.5% {background-color: #B4ABFF;}
		
			
		}

		.status-text {
    font-family: 'Compagnon Medium';
    line-height: 1rem;
    font-size: 0.9rem;
	text-align: center;
	color: black;

}

#main-title {
    margin-top: 30vh;
    font-family: 'Fustat', sans-serif;
}

.status-text a {
  text-decoration: underline;
  color: black;
}

.status-text a:hover {
  font-style: italic;
  cursor: pointer;
}

a:visited {
	color: black
}
		
			</style>
		</head>
		<body id="bg">
            <!-- <a href="/">
			<svg viewBox="0 0 200 80" style="width:200px; height:200px; transform: scale(0.70); transform-origin: center;">
				<rect id="clock" class="rotator" x="10" y="10" width="30" height="30" fill="black"/>
				<rect id="counter" class="rotator" x="10" y="40" width="30" height="30" fill="black"/>
				<rect id="clock" class="rotator" x="130" y="40" width="30" height="30" fill="black"/>
				<rect id="counter" class="rotator" x="160" y="40" width="30" height="30" fill="black"/>
				<path id="counter" class="rotator" d="M 40 40 L 70 40 A 30 30 0 0 0 40 10 Z" fill="black"/>
				<path id="clock" class="rotator" d="M 40 40 L 70 40 A 30 30 0 0 1 40 70 Z" fill="black"/>
				<path id="counter" class="rotator" d="M 100 40 L 70 40 A 30 30 0 0 1 100 10 Z" fill="black"/>
				<path id="clock" class="rotator" d="M 100 40 L 130 40 A 30 30 0 0 0 100 10 Z" fill="black"/>
				<path id="counter" class="rotator" d="M 100 40 L 130 40 A 30 30 0 0 1 100 70 Z" fill="black"/>
				<path id="clock" class="rotator" d="M 100 40 L 70 40 A 30 30 0 0 0 100 70 Z" fill="black"/>
				<path id="counter" class="rotator" d="M 130 40 L 130 10 A 30 30 0 0 1 160 40 Z" fill="black"/>
				<path id="clock" class="rotator" d="M 190 40 L 160 40 A 30 30 0 0 1 190 10 Z" fill="black"/>
			</svg></a> -->

            <header class="main-header">
                <nav class="navigation">
                    <ul>
                        <li><a href="/" class="nav-link">~DOMINIC RISHE</a></li>
                    </ul>
                    <ul class="nav-links-right">
                        <li><a href="/work/" class="nav-link">WORK</a></li>
                        <!-- Add more links here if needed -->
                    </ul>
                </nav>
            </header>
            
            <div class="headline">
                <div class="product-title" id="main-title">
                    <p>UX / WEB / DIGITAL PRODUCT WORK</p>
                </div>
                <div class="blurbs" id="intro">

                <p>
                    As a designer, I'm a committed generalist, and my work spans a wide breadth of media, technique, and concept. This page is a collection of projects specifically in the realm of digital product design, all done during my Master's program at RISD. For my professional experience please see my resume <a href="https://drive.google.com/file/d/1jntKY1r28zIzwDetaXiyVlXfAhZCJf2u/view?usp=share_link" target="_blank">here</a>.
                </p>
                <p>
                    In this realm I've explored my interests in crypto as a social good, generative visual experiences through color, and AI. Beyond prototyping with Figma and Framer, I've done some development as well — writing rudimentary smart contracts on Algorand, using Python for training AI models, and doing basic front-end development with HTML, CSS, and JS (including this website).
                </p>
                <div class="work">

                
                    <p class="and" style="margin-top: 90px; margin-bottom: 90px; "> & </p>
                </div>
                </div>






            
                  <div class="description-wrap" slot="product-text">
                    <div class="product-title">
                        <p>LEPTA</p>
                    </div>
                    <div class="blurbs">
                    <p class="head-blurb">
                        A design concept and MVP for a De-Fi application with the intent of serving as an alternative to payday lenders, credit cards, and other predatory lenders that often target people when they're at their most vulnerable.
                    </p>
                    <p><a href="https://lepta.framer.website/landing" target="_blank">View the design in Framer here.</a></p>
                    <p><a href="https://testnet.explorer.perawallet.app/application/211190180/" target="_blank">View the app on Algorand testnet here.</a></p>
                </div>
                    <div class="slideshow-container">
                        <img id="slideshow" src={lp3.src} alt="Description of image">
                        <span class="caption">+ borrower wallet overview</span>
                    </div>
                    <div class="slideshow-container">
                        <img id="slideshow" src={lp2.src} alt="Description of image">
                        <span class="caption">+ pool health dashboard</span>
                    </div>
                    <div class="slideshow-container">
                        <img id="slideshow" src={lp5.src} alt="Description of image">
                        <span class="caption" style="margin-left: 110px;">+ walkthrough of MVP live on testnet</span>
                    </div>
                    <div class="blurbs">

                        <span class="eb-garamond-unique">WHY</span>
                        <p>
                            Esoteric and unfriendly UX patterns make DeFi’s value opaque to most users. With my design and MVP for LEPTA, I tried to use the same underlying tech, but with a focus on shared interest, generosity, and community. The app manages a pool of funds that allows small, uncollateralized loans and then uses token incentives and transparency to encourage timely, generous payback. Interest payments became voluntary tips, and anonymous wallets were shown to be members of your community who were in need of financial help.
                        </p>
                        <span class="eb-garamond-unique">HOW</span>
                        <p>
                            Borrowers are free to take up to $400 (the average payday loan) permissionlessly from a shared pool of money. If they pay it back, plus a pay-what-you-can tip, they earn points that let them borrow more the next time. Points are distributed based on a convex dividend rate, which rewards long-term generosity to the pool. Points are also distributed more readily when the pool balance is getting low. Depositers share the collected tips between them, based on their time-weighted share of the pool. 
                        </p>
                        <p>
                            The design was done in Framer. For the MVP, I wrote some simple smart contracts in PyTEAL (Algorand's contract language) using the Beaker framework and the Algokit toolchain. The bare-bones interface is Typescript with no additional frameworks or dependencies - it was intended to be more of an open building block that a community could fork and modify to suit their own needs.
                        </p>

                    </div>











                    <div class="pattern-container" id="pattern1">
                        <div class="lvl1"></div>
                        <div class="lvl2"></div>
                    </div>

                <div class="description-wrap" slot="product-text">
                    <div class="product-title">
                        <p>National Weather Service / Generative Color Exploration</p>
                    </div>
                    <div class="blurbs">
                    <p class="head-blurb">
                        A new front end for the NOAA National Weather Service page that uses the dynamic color features of Google Material Design to generate local and seasonal color schemes.
                    </p></div>
                    <div class="slideshow-container">
                        <img id="slideshow" src={w2.src} alt="Description of image">
                        <span class="caption">+ simple and detailed mode</span>
                    </div>
                    <div class="slideshow-container">
                        <img id="slideshow" src={w3.src} alt="Description of image">
                        <span class="caption" style="margin-left: 35px;">+ dynamic color palette generation from local weather conditions</span>
                    </div>
                    <div class="slideshow-container">
                        <img id="slideshow" src={w4.src} alt="Description of image">
                        <span class="caption">+ light/dark modes</span>
                    </div>
                    <div class="slideshow-container">
                        <img id="slideshow" src={w5.src} alt="Description of image">
                        <span class="caption" style="margin-left: 270px;">+ continuous palette generation</span>
                    </div>
                    <div class="blurbs">
                        <span class="eb-garamond-unique">WHY</span>
                        <p>
                            As an incredibly rich — and taxpayer-funded — source of weather data, NOAA's site deserves to be more widely used as people's daily go-to weather-checking site. Color, in particular generative and algorithmic color, is an ongoing interest of mine.
                        </p>
                        <span class="eb-garamond-unique">HOW</span>
                        <p>
                            Weather pictures meant to correspond to the users' local conditions were pulled from NOAA's impressive image database. The images were then used to generate color palettes with a light and dark mode for all UI elements. Clean lines and crowd-pleasing type leave you no excuse not to use this as your daily weather page.
                        </p>
                        <p>
                            To cut down on the overwhelming amount of data and options on the original page, a choice between "simple" and "detailed" view was added. In "detailed" view, a scroll box houses one of the NWS's most valuable yet overlooked features: a narrative evaluation of your local weather conditions by an NWS expert, updated in real time, multiple times a day. 
                        </p>
                    </div>






                    <div class="pattern-container" id="pattern2">
                        <div class="lvl1"></div>
                        <div class="lvl2"></div>
                    </div>



                <div class="description-wrap" slot="product-text">
                    <div class="product-title">
                        <p>Stable Diffusion Coloring Book</p>
                    </div>
                    <div class="blurbs">
                    <p class="head-blurb" style="margin-bottom: 80px;">
                        A custom Stable Diffusion 1.5 model that allows kids to prompt their own images to color. (Note this project was done in the spring of 2023, before OpenAI released custom GPTs, including one called "Coloring Book Hero", which is more refined than this one, but arguably less fun...)
                    </p>
                </div>
                    <div class="slideshow-container">
                        <img id="slideshow" src={cb3.src} alt="Description of image">
                        <span class="caption" style="margin-left: 60px;">+ interface</span>
                    </div>
                    <div class="slideshow-container2">
                        <img id="slideshow2" src={cb2.src} alt="Description of image">
                        <span class="caption" style="margin-left: 0px;">+ the prompts and outputs from a 4-year-old</span>
                    </div>
                    <div class="blurbs">

                        <span class="eb-garamond-unique">WHY</span>
                        <p>
                            As the AI tool mania was unfolding, I was interested in a project that would sidestep the dominant conversations around copyright infringement on one end and the singularity on the other. I also wanted to simply get my hands dirty on training a custom model for image generation, which has led to many more experiments.
                        </p>
                        <span class="eb-garamond-unique">HOW</span>
                        <p>
                            At this time the easiest way to train a Stable Diffusion model was to use a Google Colab notebook to get access to remote GPU time. I forked one I found online and modified the code to do some prompt injection that would make all outputs black and white line drawings in the style of a coloring book.
                        </p>
                        <p>
                           <a href="https://github.com/domrishe/SD-coloring-book" target="_blank">View the Colab Notebook here</a>
                        </p>
                    </div>










                    <div class="pattern-container" id="pattern3">
                        <div class="lvl1"></div>
                        <div class="lvl2"></div>
                    </div>





                <div class="description-wrap" slot="product-text">
                    <div class="product-title">
                        <p>MyRISD Redesign</p>
                    </div>
                    <div class="blurbs">
                    <p class="head-blurb" style="margin-bottom: 60px;">
                        A refresh of the university's app for everything.
                    </p>
                    <p>
                        Walkthrough GIF and interactive Figma prototype below.
                    </p>
                
                </div>
                    <div class="slideshow-container">
                        <img id="slideshow" src={mr.src} alt="Description of image">
                        <span class="caption" style="margin-left: 230px;">+ walkthrough</span>
                    </div>
                    <div class="slideshow-container">
                        <iframe id="figma" style="border: 1px solid rgba(0, 0, 0, 0.1);" width="500" height="450" src="https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Fproto%2FpUGvdfA4ULecE8l8R0IXvc%2FMyRISD%3Fpage-id%3D0%253A1%26node-id%3D88-827%26viewport%3D144%252C244%252C0.09%26t%3DvFMfsbhVBvG3jvGM-1%26scaling%3Dscale-down%26content-scaling%3Dfixed%26starting-point-node-id%3D88%253A827" allowfullscreen></iframe>
                        <span class="caption" style="margin-left: 100px;">+ Interactive Figma prototype (upper right corner for fullscreen)</span>
                    </div>
                    <div class="blurbs">

                        <span class="eb-garamond-unique">WHY</span>
                        <p>
                            The app's design has long fallen out of date with the school's brand and also become bloated with broken external links and navigation that was far from intuitive. 
                        </p>
                        <span class="eb-garamond-unique">HOW</span>
                        <p>
                            A slew of testing and user interviews led to some clear findings about what features of the app were rarely used. The new design focuses on the core functions and keeps the excess out of the normal flow of the app.
                        </p>

                    </div>



     










                  

                <p style="margin-bottom: 20px; margin-top:200px;">
                    CONNECT
                </p>

                <div class="social-media">
                    <a href="https://www.linkedin.com/in/dominic-rishe-03501381/" target="_blank">
                        <img src={li.src} alt="LinkedIn">
                    </a>
                    <a href="https://www.instagram.com/nouveau_rishe" target="_blank">
                        <img src={ig.src} alt="Instagram">
                    </a>

                </div>
            </div>

            <script>
                function getRandomWidth() {
                    return Math.floor(Math.random() * 70) + 10; // Width between 10px and 300px
                }
            
                function createRandomDivs(parent) {
                    // Clear existing divs
                    parent.innerHTML = '';
            
                    // Create a random number of divs between 3 and 10
                    const numberOfDivs = Math.floor(Math.random() * 5) + 3;
            
                    for (let i = 0; i < numberOfDivs; i++) {
                        const div = document.createElement('div');
                        div.className = 'line';
            
                        // Randomize width
                        div.style.width = getRandomWidth() + 'px';
                        
                        // Randomize background color
                        div.style.backgroundColor = Math.random() < 0.5 ? 'black' : 'transparent';
            
                        parent.appendChild(div);
                    }
                }
            
                function randomizePattern(container) {
                    const levels = container.querySelectorAll('.lvl1, .lvl2');
                    levels.forEach(level => {
                        createRandomDivs(level);
                    });
                }
            
                function initializePatternGenerator(containerId) {
                    const container = document.getElementById(containerId);
                    randomizePattern(container);
                    container.addEventListener('click', () => randomizePattern(container));
                }
            
                // Initialize pattern generators for each container
                initializePatternGenerator('pattern1');
                initializePatternGenerator('pattern2');
                initializePatternGenerator('pattern3');
            </script>
		</body>



</MainLayout>

