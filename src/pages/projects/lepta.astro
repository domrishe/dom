---
import ProjectLayout from "../../layouts/ProjectLayout.astro";
const images = await Astro.glob('../../media/Projects/lepta/*').then(files => {return files.map(file => file.default);}); 

---

<ProjectLayout title="LEPTA">

    <div class="gallery" slot="gallery">
        <div class="container">
            <a href="#img1">
                <img src={images[0].src} alt="portfolio item" id="expandedImg" />
            </a>
            <div id="imgtext"></div>
        </div>
        <div class="row">

        {images.map((image) => (
            <div class="column">
                <img src={image.src} alt="portfolio item" class="thumb" style="width:100%" />
            </div>
        ))}

        </div>
    </div>
        
    

    <div
    id="lightboximg"
    style={{ backgroundImage: `url(${images[0].src})` }};
    slot="lightboximg"
    >
    </div>



    
    <div class="description-wrap" slot="product-text">
        <div class="product-title">
            <p>LEPTA PROTOCOL</p>
            <p class="wip">[WIP]</p>
        </div>
        <div class="product-details">
            <span>WHAT</span>
            <p>
                A set of primitive smart contracts designed for small communities to pool their resources together and share according to their own rules. Named after the ancient Greek equivalent of the penny.
            </p>
            <span class="why">WHY</span>
            <p>
                The "De" in "DeFi" shouldn't always mean "degenerate". There are many communities who could benefit from breaking free of institutional control over their finances, and who have no interest in trading on leverage or flipping ðŸ’© coins - what most DeFi protocols seem to be focused on.
            </p>
            <span class="how">HOW</span>
            <p>
                The first smart contract is currently being tested on the Algorand blockchain - chosen for its low fees, speed, and easy developer experience (the high Tx fees on Ethereum, even on L2's, just don't align with the ethos of this project). 
            </p>
            <p>
                The smart contract was written in PyTEAL, along with the Beaker framework and the newly released Algokit toolchain. The interface is Typescript with no additional frameworks or dependencies - it's intended to be more of an open building block that a community could fork and modify to suit their own needs.
            </p>
        </div>
    </div>
</ProjectLayout>
